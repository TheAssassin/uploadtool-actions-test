name: Main pipeline

on: [push, pull_request, workflow_dispatch]

jobs:
  build-something:
    strategy:
      fail-fast: false
      matrix:
        ARCH: [x86_64, i386]
        DIST: [bionic, xenial]
    name: Build something
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Build something
        env:
          DIST: ${{ matrix.DIST }}
          ARCH: ${{ matrix.ARCH }}
        run: dd if=/dev/urandom of=testfile-"${DIST}"-"${ARCH}" bs=1M count=10
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: testfile
          path: testfile*

  upload:
    name: Create release and upload artifacts
    needs:
      - build-something
    runs-on: ubuntu-18.04
    steps:
      - name: Dump environment
        run: env
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Inspect directory after downloading artifacts
        run: ls -alFR
      - name: Create release and upload artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WEBDAV_URL: ${{ secrets.WEBDAV_URL }}
          WEBDAV_USER: ${{ secrets.WEBDAV_USER }}
          WEBDAV_PASSWORD: ${{ secrets.WEBDAV_PASSWORD }}
          WEBDAV_RELEASE_NAME: ""
        run: |
            env | grep GITHUB_ | grep -v GITHUB_TOKEN
            wget -q https://github.com/TheAssassin/pyuploadtool/releases/download/continuous/pyuploadtool-x86_64.AppImage
            chmod +x pyuploadtool-x86_64.AppImage
            ./pyuploadtool-x86_64.AppImage **/testfile*

